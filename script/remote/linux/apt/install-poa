#!/bin/bash
#
#   install-poa - install the Ethereum POA blockchain from its repository
#

set -e

# Create an install dir if not already there.
#
if [ ! -e 'install' ] ; then
    mkdir 'install'
fi

if [ ! -e 'install/poa' ] ; then
    curl -L https://nextcloud.in.tum.de/index.php/s/2axaweKBBHX626S/download/poa.tar.gz | tar xzf - -C 'install'
fi

if [ ! -e 'install/geth-accounts' ] ; then
	curl -L https://nextcloud.in.tum.de/index.php/s/Sxt9ZbqKgsFMcSz/download/geth-accounts.tar.gz | tar xzf - -C 'install'
fi

exit 0

golang_url="https://go.dev/dl/go1.16.15.linux-$(dpkg --print-architecture).tar.gz"

geth_url='https://github.com/ethereum/go-ethereum'
geth_checkout='72c2c0ae7e2332b08d3e1ebfe5f850a92e26e8a1'

if ! command -v 'sudo' > '/dev/null' ; then
    echo "Cannot find command 'sudo'" >&2
    exit 1
fi

# Install common utilities as well as golang 1.16.
# This specific version of golang is required by POA.
# We install it along the standard golang version and add it to the PATH when
# building POA.
#
sudo -n apt-get install -yy 'git' 'make'
curl -L "${golang_url}" | tar --one-top-level='install/go1.16.15' --strip-components=1 -xzf -
export PATH="${PWD}/install/go1.16.15/bin:${PATH}"

# Clone POA from the official repository and build it.
#
git clone "${geth_url}" 'install/poa'
(
    cd 'install/poa'

    git checkout "${geth_checkout}"


    # Avoid modification outside of this repository.
    # This is important because some other installed software could use
    # different versions of Go.
    #
    export GOPATH="${PWD}/go"

    make all
)
